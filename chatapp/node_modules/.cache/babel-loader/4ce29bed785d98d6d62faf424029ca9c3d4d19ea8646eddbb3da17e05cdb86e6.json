{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\21260\\\\Desktop\\\\CHAT-GPT GATE\\\\chatapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './normal.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n  const [chatHistory, setChathistory] = useState([]);\n  useEffect(() => {\n    gethistory();\n  }, []);\n  function gethistory() {\n    const response = fetch(\"http://localhost:3080/historychat\").then(res => res.json()).then(data => setChathistory(data.message));\n  }\n  async function clearChat() {\n    setChatLog([]);\n  }\n  async function showHistory() {\n    setChatLog(chatHistory);\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let chatLogNew = [...chatLog, {\n      user: \"me\",\n      message: `${input}`\n    }];\n    setInput(\"\");\n    setChatLog(chatLogNew);\n    const messages = chatLogNew.map(message => message.message).join(\"\");\n    const response = await fetch(\"http://localhost:3080/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: messages\n      })\n    });\n    const data = await response.json();\n    setChatLog([...chatLogNew, {\n      user: \"chatgpt\",\n      message: `${data.message}`\n    }]);\n    console.log(data.message);\n    console.log(chatLog);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidemenu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-menu-button\",\n        onClick: clearChat,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \"New Chat\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"historychat side-menu-button\",\n        onClick: showHistory,\n        children: \"History of chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            className: \"chat-input-text\",\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q4FyHYFi4rzJOpE5mWlSOuAdg3Q=\");\n_c = App;\nconst ChatMessage = _ref => {\n  let {\n    message\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-message ${message.user}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ChatMessage;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["useState","useEffect","App","input","setInput","chatLog","setChatLog","chatHistory","setChathistory","gethistory","response","fetch","then","res","json","data","message","clearChat","showHistory","handleSubmit","e","preventDefault","chatLogNew","user","messages","map","join","method","headers","body","JSON","stringify","console","log","index","target","value","ChatMessage"],"sources":["C:/Users/21260/Desktop/CHAT-GPT GATE/chatapp/src/App.js"],"sourcesContent":["import './App.css';\nimport './normal.css';\nimport {useState,useEffect} from 'react';\n\nfunction App() {\n\n  const [input,setInput] = useState(\"\");\n  const [chatLog,setChatLog] = useState([]);\n  const [chatHistory,setChathistory] = useState([]);\n\n  useEffect(()=>{\n    gethistory();\n  },[])\n\n  function gethistory(){\n    const response =  fetch(\"http://localhost:3080/historychat\")\n    .then(res => res.json())\n    .then(data =>setChathistory(data.message))\n  }\n\n  async function clearChat(){\n    setChatLog([]);\n  }\n\n  async function showHistory(){\n    setChatLog(chatHistory);\n  }\n\n  async function handleSubmit(e){\n    e.preventDefault();\n    let chatLogNew = [...chatLog, { user:\"me\",message: `${input}`}];\n    setInput(\"\");\n\n    setChatLog(chatLogNew);\n\n    const messages = chatLogNew.map((message) => message.message).join(\"\");\n    \n    const response = await fetch(\"http://localhost:3080/\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: messages\n      })\n      \n    });\n      \n      const data = await response.json();\n      setChatLog([...chatLogNew,{ user: \"chatgpt\", message: `${data.message}`}]);\n      console.log(data.message); \n      console.log(chatLog);\n  }\n\n  return (\n    <div className=\"App\">\n      <aside className=\"sidemenu\">\n        <div className=\"side-menu-button\" onClick={clearChat}>\n          <span>+</span>\n          New Chat\n        </div>\n        <div className='historychat side-menu-button' onClick={showHistory}>\n          History of chat\n        </div>\n      </aside>\n      <section className=\"chatbox\">\n        <div className='chat-log'>\n\n          {chatLog.map((message,index)=>(\n            <ChatMessage key={index} message={message} />\n          ))}\n\n          \n        </div>\n        <div className=\"chat-input-holder\">\n          <form onSubmit={handleSubmit}>\n            <input\n            rows=\"1\" \n            value={input}\n            onChange={(e)=> setInput(e.target.value)}\n            className='chat-input-text'\n            placeholder=\"Type your message...\"></input>\n          </form>\n          </div>\n          \n      </section>\n    </div>\n  );\n}\n\n\nconst ChatMessage = ({ message }) =>{\n  return (\n    <div className={`chat-message ${message.user}`}>\n            <div className='chat-message-center'>\n            <div className='message'>\n              {message.message}\n            </div>\n            </div>\n          </div>\n  )\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}